# Copyright 2019 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Product
name: Dataproc
versions:
  - !ruby/object:Api::Product::Version
    name: ga
    base_url: https://dataproc.googleapis.com/v1/
scopes:
  - https://www.googleapis.com/auth/cloud-identity
apis_required:
  - !ruby/object:Api::Product::ApiReference
    name: Cloud Dataproc API
    url: https://console.cloud.google.com/apis/library/dataproc.googleapis.com
objects:
  - !ruby/object:Api::Resource
    name: 'AutoscalingPolicy'
    base_url: "projects/{{project}}/locations/{{location}}/autoscalingPolicies"
    self_link: "projects/{{project}}/locations/{{location}}/autoscalingPolicies/{{id}}"
    collection_url_key: 'policies'
    description: |
      Describes an autoscaling policy for Dataproc cluster autoscaler.
    iam_policy: !ruby/object:Api::Resource::IamPolicy
      method_name_separator: ':'
      parent_resource_attribute: 'policy_id'
      fetch_iam_policy_verb: :POST
      import_format: ["projects/{{project}}/locations/{{location}}/autoscalingPolicies/{{policy_id}}", "{{policy_id}}"]        
    parameters:
      - !ruby/object:Api::Type::String
        name: 'location'
        url_param_only: true
        input: true
        default_value: global
        description: |
          The  location where the autoscaling policy should reside.
          The default value is `global`.
    properties:
      - !ruby/object:Api::Type::String
        name: 'id'
        required: true
        description: |
          The policy id. The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_),
          and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between
          3 and 50 characters.
      - !ruby/object:Api::Type::String
        name: 'name'
        output: true
        description: |
          The "resource name" of the autoscaling policy.
      - !ruby/object:Api::Type::NestedObject
        name: 'workerConfig'
        description: |
          Describes how the autoscaler will operate for primary workers.
        properties:
          - !ruby/object:Api::Type::Integer
            name: 'minInstances'
            default_value: 2
            description: |
              Minimum number of instances for this group. Bounds: [2, maxInstances]. Defaults to 2.
          - !ruby/object:Api::Type::Integer
            name: 'maxInstances'
            required: true
            description: |
              Maximum number of instances for this group.
          - !ruby/object:Api::Type::Integer
            name: 'weight'
            default_value: 1
            description: |
              Weight for the instance group, which is used to determine the fraction of total workers
              in the cluster from this instance group. For example, if primary workers have weight 2,
              and secondary workers have weight 1, the cluster will have approximately 2 primary workers
              for each secondary worker.

              The cluster may not reach the specified balance if constrained by min/max bounds or other
              autoscaling settings. For example, if maxInstances for secondary workers is 0, then only
              primary workers will be added. The cluster can also be out of balance when created.

              If weight is not set on any instance group, the cluster will default to equal weight for
              all groups: the cluster will attempt to maintain an equal number of workers in each group
              within the configured size bounds for each group. If weight is set for one group only,
              the cluster will default to zero weight on the unset group. For example if weight is set
              only on primary workers, the cluster will use primary workers only and no secondary workers.
      - !ruby/object:Api::Type::NestedObject
        name: 'secondaryWorkerConfig'
        description: |
          Describes how the autoscaler will operate for secondary workers.
        properties:
          - !ruby/object:Api::Type::Integer
            name: 'minInstances'
            at_least_one_of:
              - secondary_worker_config.0.min_instances
              - secondary_worker_config.0.max_instances
              - secondary_worker_config.0.weight
            default_value: 0
            description: |
              Minimum number of instances for this group. Bounds: [0, maxInstances]. Defaults to 0.
          - !ruby/object:Api::Type::Integer
            name: 'maxInstances'
            at_least_one_of:
              - secondary_worker_config.0.min_instances
              - secondary_worker_config.0.max_instances
              - secondary_worker_config.0.weight
            default_value: 0
            description: |
              Maximum number of instances for this group. Note that by default, clusters will not use
              secondary workers. Required for secondary workers if the minimum secondary instances is set.
              Bounds: [minInstances, ). Defaults to 0.
          - !ruby/object:Api::Type::Integer
            name: 'weight'
            at_least_one_of:
              - secondary_worker_config.0.min_instances
              - secondary_worker_config.0.max_instances
              - secondary_worker_config.0.weight
            default_value: 1
            description: |
              Weight for the instance group, which is used to determine the fraction of total workers
              in the cluster from this instance group. For example, if primary workers have weight 2,
              and secondary workers have weight 1, the cluster will have approximately 2 primary workers
              for each secondary worker.

              The cluster may not reach the specified balance if constrained by min/max bounds or other
              autoscaling settings. For example, if maxInstances for secondary workers is 0, then only
              primary workers will be added. The cluster can also be out of balance when created.

              If weight is not set on any instance group, the cluster will default to equal weight for
              all groups: the cluster will attempt to maintain an equal number of workers in each group
              within the configured size bounds for each group. If weight is set for one group only,
              the cluster will default to zero weight on the unset group. For example if weight is set
              only on primary workers, the cluster will use primary workers only and no secondary workers.
      - !ruby/object:Api::Type::NestedObject
        name: 'basicAlgorithm'
        description: |
          Basic algorithm for autoscaling.
        properties:
          - !ruby/object:Api::Type::String
            name: 'cooldownPeriod'
            default_value: "120s"
            description: |
              Duration between scaling events. A scaling period starts after the
              update operation from the previous event has completed.

              Bounds: [2m, 1d]. Default: 2m.
          - !ruby/object:Api::Type::NestedObject
            name: 'yarnConfig'
            required: true
            description: |
              YARN autoscaling configuration.
            properties:
              - !ruby/object:Api::Type::String
                name: 'gracefulDecommissionTimeout'
                required: true
                description: |
                  Timeout for YARN graceful decommissioning of Node Managers. Specifies the
                  duration to wait for jobs to complete before forcefully removing workers
                  (and potentially interrupting jobs). Only applicable to downscaling operations.

                  Bounds: [0s, 1d].
              - !ruby/object:Api::Type::Double
                name: 'scaleUpFactor'
                required: true
                description: |
                  Fraction of average pending memory in the last cooldown period for which to
                  add workers. A scale-up factor of 1.0 will result in scaling up so that there
                  is no pending memory remaining after the update (more aggressive scaling).
                  A scale-up factor closer to 0 will result in a smaller magnitude of scaling up
                  (less aggressive scaling).

                  Bounds: [0.0, 1.0].
              - !ruby/object:Api::Type::Double
                name: 'scaleDownFactor'
                required: true
                description: |
                  Fraction of average pending memory in the last cooldown period for which to
                  remove workers. A scale-down factor of 1 will result in scaling down so that there
                  is no available memory remaining after the update (more aggressive scaling).
                  A scale-down factor of 0 disables removing workers, which can be beneficial for
                  autoscaling a single job.

                  Bounds: [0.0, 1.0].
              - !ruby/object:Api::Type::Double
                name: 'scaleUpMinWorkerFraction'
                default_value: 0.0
                description: |
                  Minimum scale-up threshold as a fraction of total cluster size before scaling
                  occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler
                  must recommend at least a 2-worker scale-up for the cluster to scale. A threshold of
                  0 means the autoscaler will scale up on any recommended change.

                  Bounds: [0.0, 1.0]. Default: 0.0.
              - !ruby/object:Api::Type::Double
                name: 'scaleDownMinWorkerFraction'
                default_value: 0.0
                description: |
                  Minimum scale-down threshold as a fraction of total cluster size before scaling occurs.
                  For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must
                  recommend at least a 2 worker scale-down for the cluster to scale. A threshold of 0
                  means the autoscaler will scale down on any recommended change.

                  Bounds: [0.0, 1.0]. Default: 0.0.
  - !ruby/object:Api::Resource
    name: 'Cluster'
    base_url: "projects/{{project}}/regions/{{region}}/clusters"
    self_link: "projects/{{project}}/regions/{{region}}/clusters/{{clusterName}}"
    description: |
      Describes an autoscaling policy for Dataproc cluster autoscaler.
    parameters:
      - !ruby/object:Api::Type::String
        name: 'region'
        url_param_only: true
        input: true
        description: |
          The region in which the cluster and associated nodes will be created in.
    properties:
      - !ruby/object:Api::Type::String
        name: 'clusterName'
        required: true
        description: |
          The name of the cluster, unique within the project and region.
      - !ruby/object:Api::Type::KeyValuePairs
        name: 'labels'
        description: |
          Labels to apply to this cluster.  A list of key->value pairs.
      - !ruby/object:Api::Type::NestedObject
        name: 'config'
        description: |
          Configuration for the cluster
        properties:
          - !ruby/object:Api::Type::String
            name: 'configBucket'
            description: |
              The Cloud Storage staging bucket used to stage files, such as Hadoop jars,
              between client machines and the cluster.
          - !ruby/object:Api::Type::NestedObject
            name: 'gceClusterConfig'
            description: |
              Common config settings for resources of Google Compute Engine cluster instances,
              applicable to all instances in the cluster.
            properties:
              - !ruby/object:Api::Type::String
                name: 'zoneUri'
                description: |
                  The zone where the Compute Engine cluster will be located
              - !ruby/object:Api::Type::String
                name: 'networkUri'
                description: |
                  The Compute Engine network to be used for machine communications
              - !ruby/object:Api::Type::String
                name: 'subnetworkUri'
                description: |
                  The Compute Engine subnetwork to be used for machine communications
              - !ruby/object:Api::Type::Boolean
                name: 'internalIpOnly'
                description: |
                  If true, all instances int he cluster will only have internal IP addresses
              - !ruby/object:Api::Type::Array
                name: 'serviceAccountScopes'
                item_type: Api::Type::String
                description: |
                  The URIs of service account scopes to be included in Compute Engine instances
                  The following base set of scopes is always included:

                  https://www.googleapis.com/auth/cloud.useraccounts.readonly

                  https://www.googleapis.com/auth/devstorage.read_write

                  https://www.googleapis.com/auth/logging.write
              - !ruby/object:Api::Type::Array
                name: 'tags'
                item_type: Api::Type::String
                description: |
                  The Compute Engine tags to add to all instances
              - !ruby/object:Api::Type::KeyValuePairs
                name: 'metadata'
                description: |
                  The map of metadata entries to add to all instances
          - !ruby/object:Api::Type::NestedObject
            name: 'masterConfig'
            description: |
              The config settings for Compute Engine resources in an instance group, such as a
              master or worker group.
            properties:
              - !ruby/object:Api::Type::Integer
                name: 'numInstances'
                description: |
                  The number of VM instances in the instance group. For master instance groups,
                  must be set to 1.
              - !ruby/object:Api::Type::Array
                name: 'instanceNames'
                output: true
                item_type: Api::Type::String
                description: |
                  The list of instance names.
              - !ruby/object:Api::Type::String
                name: 'imageUri'
                description: |
                  The Compute Engine image resource used for cluster instances.
              - !ruby/object:Api::Type::String
                name: 'machineTypeUri'
                description: |
                  The Compute Engine machine type used for cluster instances
              - !ruby/object:Api::Type::NestedObject
                name: 'diskConfig'
                description: |
                  Disk option config settings
                properties:
                  - !ruby/object:Api::Type::String
                    name: 'bootDiskType'
                    description: |
                      Type of the boot disk. Valid values are "pd-ssd" or "pd-standard"
                  - !ruby/object:Api::Type::Integer
                    name: 'bootDiskSizeGb'
                    description: |
                      Size in GB of the boot disk.
                  - !ruby/object:Api::Type::Integer
                    name: 'numLocalSsds'
                    description: |
                      Number of attached SSDs, from 0 to 4.
              - !ruby/object:Api::Type::Boolean
                name: 'isPreemptible'
                output: true
                description: |
                  Specifies if this instance group contains preemptible instances.
              - !ruby/object:Api::Type::Enum
                name: 'preemptibility'
                description: |
                  Specifies the preemptibility of the instance group.
                  The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.
                  The default value for secondary instances is PREEMPTIBLE.
                values:
                - :PREEMPTIBILITY_UNSPECIFIED
                - :NON_PREEMPTIBLE
                - :PREEMPTIBLE
              - !ruby/object:Api::Type::NestedObject
                name: 'managedGroupConfig'
                output: true
                description: |
                  The config for Compute Engine Instance Group Manager that manages this group.
                  This is only used for preemptible instance groups.
                properties:
                  - !ruby/object:Api::Type::String
                    name: 'instanceTemplateName'
                    description: |
                      The name of the Instance Template used for the Managed Instance Group.
                  - !ruby/object:Api::Type::String
                    name: instanceGroupManagerName
                    description: |
                      The name of the Instance Group Manager for this group
          - !ruby/object:Api::Type::NestedObject
            name: 'workerConfig'
            description: |
              The config settings for Compute Engine resources in an instance group, such as a
              master or worker group.
            properties:
              - !ruby/object:Api::Type::Integer
                name: 'numInstances'
                description: |
                  The number of VM instances in the instance group. For master instance groups,
                  must be set to 1.
              - !ruby/object:Api::Type::Array
                name: 'instanceNames'
                output: true
                item_type: Api::Type::String
                description: |
                  The list of instance names.
              - !ruby/object:Api::Type::String
                name: 'imageUri'
                description: |
                  The Compute Engine image resource used for cluster instances.
              - !ruby/object:Api::Type::String
                name: 'machineTypeUri'
                description: |
                  The Compute Engine machine type used for cluster instances
              - !ruby/object:Api::Type::NestedObject
                name: 'diskConfig'
                description: |
                  Disk option config settings
                properties:
                  - !ruby/object:Api::Type::String
                    name: 'bootDiskType'
                    description: |
                      Type of the boot disk. Valid values are "pd-ssd" or "pd-standard"
                  - !ruby/object:Api::Type::Integer
                    name: 'bootDiskSizeGb'
                    description: |
                      Size in GB of the boot disk.
                  - !ruby/object:Api::Type::Integer
                    name: 'numLocalSsds'
                    description: |
                      Number of attached SSDs, from 0 to 4.
              - !ruby/object:Api::Type::Boolean
                name: 'isPreemptible'
                output: true
                description: |
                  Specifies if this instance group contains preemptible instances.
              - !ruby/object:Api::Type::Enum
                name: 'preemptibility'
                description: |
                  Specifies the preemptibility of the instance group.
                  The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.
                  The default value for secondary instances is PREEMPTIBLE.
                values:
                - :PREEMPTIBILITY_UNSPECIFIED
                - :NON_PREEMPTIBLE
                - :PREEMPTIBLE
              - !ruby/object:Api::Type::NestedObject
                name: 'managedGroupConfig'
                output: true
                description: |
                  The config for Compute Engine Instance Group Manager that manages this group.
                  This is only used for preemptible instance groups.
                properties:
                  - !ruby/object:Api::Type::String
                    name: 'instanceTemplateName'
                    description: |
                      The name of the Instance Template used for the Managed Instance Group.
                  - !ruby/object:Api::Type::String
                    name: instanceGroupManagerName
                    description: |
                      The name of the Instance Group Manager for this group
          - !ruby/object:Api::Type::NestedObject
            name: 'secondaryWorkerConfig'
            description: |
              The config settings for Compute Engine resources in an instance group, such as a
              master or worker group.
            properties:
              - !ruby/object:Api::Type::Integer
                name: 'numInstances'
                description: |
                  The number of VM instances in the instance group. For master instance groups,
                  must be set to 1.
              - !ruby/object:Api::Type::Array
                name: 'instanceNames'
                output: true
                item_type: Api::Type::String
                description: |
                  The list of instance names.
              - !ruby/object:Api::Type::String
                name: 'imageUri'
                description: |
                  The Compute Engine image resource used for cluster instances.
              - !ruby/object:Api::Type::String
                name: 'machineTypeUri'
                description: |
                  The Compute Engine machine type used for cluster instances
              - !ruby/object:Api::Type::NestedObject
                name: 'diskConfig'
                description: |
                  Disk option config settings
                properties:
                  - !ruby/object:Api::Type::String
                    name: 'bootDiskType'
                    description: |
                      Type of the boot disk. Valid values are "pd-ssd" or "pd-standard"
                  - !ruby/object:Api::Type::Integer
                    name: 'bootDiskSizeGb'
                    description: |
                      Size in GB of the boot disk.
                  - !ruby/object:Api::Type::Integer
                    name: 'numLocalSsds'
                    description: |
                      Number of attached SSDs, from 0 to 4.
              - !ruby/object:Api::Type::Boolean
                name: 'isPreemptible'
                output: true
                description: |
                  Specifies if this instance group contains preemptible instances.
              - !ruby/object:Api::Type::Enum
                name: 'preemptibility'
                description: |
                  Specifies the preemptibility of the instance group.
                  The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.
                  The default value for secondary instances is PREEMPTIBLE.
                values:
                - :PREEMPTIBILITY_UNSPECIFIED
                - :NON_PREEMPTIBLE
                - :PREEMPTIBLE
              - !ruby/object:Api::Type::NestedObject
                name: 'managedGroupConfig'
                output: true
                description: |
                  The config for Compute Engine Instance Group Manager that manages this group.
                  This is only used for preemptible instance groups.
                properties:
                  - !ruby/object:Api::Type::String
                    name: 'instanceTemplateName'
                    description: |
                      The name of the Instance Template used for the Managed Instance Group.
                  - !ruby/object:Api::Type::String
                    name: instanceGroupManagerName
                    description: |
                      The name of the Instance Group Manager for this group
          - !ruby/object:Api::Type::NestedObject
            name: 'softwareConfig'
            description: |
              Specifies the selection and config of software inside the cluster
            properties:
              - !ruby/object:Api::Type::String
                name: 'imageVersion'
                description: |
                  The version of software inside the cluster. It must be one of the supported Cloud Dataproc
                  Versions, such as "1.2" (including a subminor version, such as "1.2.29"), or the "preview"
                  version.
              - !ruby/object:Api::Type::KeyValuePairs
                name: 'properties'
                description: |
                  The properties to set on daemon config files.
                  Property keys are specified in the prefix:property format, for example `core:hadoop.tmp.dir`
              - !ruby/object:Api::Type::Enum
                name: 'optionalComponents'
                description: |
                  The set of optional components to activate on the cluster.

                  Possible values include: COMPONENT_UNSPECIFIED, ANACONDA, HIVE_WEBHCAT, JUPYTER, ZEPPELIN, HBASE, SOLR, and RANGER
                values:
                - :COMPONENT_UNSPECIFIED
                - :ANACONDA
                - :HBASE
                - :RANGER
                - :SOLR
                - :HIVE_WEBHCAT
                - :JUPYTER
                - :ZEPPELIN
          - !ruby/object:Api::Type::Array
            name: 'initializationActions'
            description: |
              Specifies an executable to run on a fully configured node and a timeout period for executable completion.
            item_type: !ruby/object:Api::Type::NestedObject
              properties:
                - !ruby/object:Api::Type::String
                  name: 'executableFile'
                  description: |
                    Cloud Storage URI of the executable file
                - !ruby/object:Api::Type::String
                  name: 'executionTimeout'
                  description: |
                    Amount of time executable has to complete
          - !ruby/object:Api::Type::NestedObject
            name: 'encryptionConfig'
            description: |
              Encryption settings for the cluster.
            properties:
              - !ruby/object:Api::Type::String
                name: 'gcePdKmsKeyName'
                description: |
                  The Cloud KMS key name to use for PD disk encryption for all instances in the cluster.
          - !ruby/object:Api::Type::NestedObject
            name: 'securityConfig'
            description: |
              Kerberos config holder.
            properties:
              - !ruby/object:Api::Type::NestedObject
                name: 'kerberosConfig'
                description: |
                  Kerberos related configuration.
                properties:
                  - !ruby/object:Api::Type::Boolean
                    name: 'enableKerberos'
                    description: |
                      Flag to indicate whether to Kerberize the cluster.
                  - !ruby/object:Api::Type::String
                    name: 'rootprincipalPasswordUri'
                    description: |
                      The cloud Storage URI of a KMS encrypted file containing the root principal password.
                  - !ruby/object:Api::Type::String
                    name: 'kmsKeyUri'
                    description: |
                      The uri of the KMS key used to encrypt various sensitive files.
                  - !ruby/object:Api::Type::String
                    name: 'keystoreUri'
                    description: |
                      The Cloud Storage URI of the keystore file used for SSL encryption.
                  - !ruby/object:Api::Type::String
                    name: 'truststoreUri'
                    description: |
                      The Cloud Storage URI of a KMS encrypted file containing the password to the user provided keystore.
                  - !ruby/object:Api::Type::String
                    name: 'keyPasswordUri'
                    description: |
                      The Cloud Storage URI of a KMS encrypted file containing the password to the user provided key.
                  - !ruby/object:Api::Type::String
                    name: 'truststorePasswordUri'
                    description: |
                      The Cloud Storage URI of a KMS encrypted file containing the password to the user provided truststore.
                  - !ruby/object:Api::Type::String
                    name: 'crossRealmTrustRealm'
                    description: |
                      The remote realm the Dataproc on-cluster KDC will trust, should the user enable cross realm trust.
                  - !ruby/object:Api::Type::String
                    name: 'crossRealmTrustAdminServer'
                    description: |
                      The admin server (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
                  - !ruby/object:Api::Type::String
                    name: 'crossRealmTrustSharedPasswordUri'
                    description: |
                      The Cloud Storage URI of a KMS encrypted file containing the shared password between the on-cluster
                      Kerberos realm and the remote trusted realm, in a cross realm trust relationship.
                  - !ruby/object:Api::Type::String
                    name: 'kdcDbKeyUri'
                    description: |
                      The Cloud Storage URI of a KMS encrypted file containing the master key of the KDC database.
                  - !ruby/object:Api::Type::String
                    name: 'tgtLifetimeHours'
                    description: |
                      The lifetime of the ticket granting ticket, in hours.
                  - !ruby/object:Api::Type::String
                    name: 'realm'
                    description: |
                      The name of the on-cluster Kerberos realm.
  - !ruby/object:Api::Resource
    name: 'Batches'
    create_url: projects/{{project}}/locations/{{location}}/batches?batchId={{batch_id}}
    base_url: "projects/{{project}}/locations/{{location}}/batches"
    self_link: "projects/{{project}}/locations/{{location}}/batches/{{batch_id}}"
    input: true
    references: !ruby/object:Api::Resource::ReferenceLinks
      api: 'https://cloud.google.com/dataproc-serverless/docs/reference/rest/v1/projects.locations.batches'
    description: |
      Describes a batch workload in the service.
    async: !ruby/object:Api::OpAsync
      actions:
        - create
      operation: !ruby/object:Api::OpAsync::Operation
        path: 'name'
        base_url: '{{op_id}}'
        wait_ms: 1000
      result: !ruby/object:Api::OpAsync::Result
        path: 'response'
        resource_inside_response: true
      status: !ruby/object:Api::OpAsync::Status
        path: 'done'
        complete: true
        allowed:
          - true
          - false
      error: !ruby/object:Api::OpAsync::Error
        path: 'error'
        message: 'message'
    parameters:
      - !ruby/object:Api::Type::String
        name: 'location'
        url_param_only: true
        input: true
        required: true
        description: |
          The location of the Dataproc batches where your workload will run.
    identity:
      - batchId
    properties:
      # batchId
      - !ruby/object:Api::Type::String
        name: 'batchId'
        url_param_only: true
        input: true
        description: |
          The ID to use for the batch, which will become the final component of the batch's resource name.
          This value must be 4-63 characters. Valid characters are /[a-z][0-9]-/.

      # name
      - !ruby/object:Api::Type::String
        name: name
        description: |
          The resource name of the batch.
        output: true

      # uuid
      - !ruby/object:Api::Type::String
        name: uuid
        description: |
          A batch UUID (Unique Universal Identifier). The service generates this value when it creates the batch.
        output: true

      # createTime
      - !ruby/object:Api::Type::String
        name: createTime
        description: |
          The time when the batch was created.
        output: true

      # runtimeInfo
      - !ruby/object:Api::Type::NestedObject
        name: 'runtimeInfo'
        description: |
          Runtime information about batch execution.
        output: true
        properties:
          - !ruby/object:Api::Type::KeyValuePairs
            name: 'endpoints'
            output: true
            description: |
              Map of remote access endpoints (such as web interfaces and APIs) to their URIs.
          - !ruby/object:Api::Type::String
            name: 'outputUri'
            output: true
            description: |
              A URI pointing to the location of the stdout and stderr of the workload.
          - !ruby/object:Api::Type::String
            name: 'diagnosticOutputUri'
            output: true
            description: |
              A URI pointing to the location of the diagnostics tarball.
          - !ruby/object:Api::Type::NestedObject
            name: 'approximateUsage'
            description: |
              Approximate workload resource usage calculated after workload finishes.
            output: true
            properties:
              - !ruby/object:Api::Type::String
                name: 'milliDcuSeconds'
                output: true
                description: |
                  DCU (Dataproc Compute Units) usage in (milliDCU x seconds).
              - !ruby/object:Api::Type::String
                name: 'shuffleStorageGbSeconds'
                output: true
                description: |
                  Shuffle storage usage in (GB x seconds).

      # state
      - !ruby/object:Api::Type::Enum
        name: state
        description: |
          The state of the batch.
        values:
          - :STATE_UNSPECIFIED
          - :PENDING
          - :RUNNING
          - :CANCELLING
          - :CANCELLED
          - :SUCCEEDED
          - :FAILED
        output: true

      # stateMessage
      - !ruby/object:Api::Type::String
        name: stateMessage
        description: |
          Batch state details, such as a failure description if the state is FAILED.
        output: true

      # stateTime
      - !ruby/object:Api::Type::String
        name: stateTime
        description: |
          The time when the batch entered a current state.
        output: true

      # creator
      - !ruby/object:Api::Type::String
        name: creator
        description: |
          The email address of the user who created the batch.
        output: true

      # labels
      - !ruby/object:Api::Type::KeyValuePairs
        name: 'labels'
        description: |
          The labels to associate with this batch.
          Label keys must contain 1 to 63 characters, and must conform to RFC 1035.
          Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035.
          No more than 32 labels can be associated with a batch.
        input: true

      # runtimeConfig
      - !ruby/object:Api::Type::NestedObject
        name: 'runtimeConfig'
        description: |
          Runtime configuration for the batch execution.
        input: true
        properties:
          - !ruby/object:Api::Type::String
            name: 'version'
            description: |
              Version of the batch runtime.
            input: true
          - !ruby/object:Api::Type::String
            name: 'containerImage'
            description: |
              Optional custom container image for the job runtime environment. If not specified, a default container image will be used.
            input: true
          - !ruby/object:Api::Type::KeyValuePairs
            name: 'properties'
            description: |
              A mapping of property names to values, which are used to configure workload execution.
            input: true

      # environmentConfig
      - !ruby/object:Api::Type::NestedObject
        name: 'environmentConfig'
        description: |
          Environment configuration for a workload.
        input: true
        properties:
          # executionConfig
          - !ruby/object:Api::Type::NestedObject
            name: 'executionConfig'
            description: |
              Execution configuration for a workload.
            input: true
            properties:
            - !ruby/object:Api::Type::String
              name: 'serviceAccount'
              description: |
                Service account that used to execute workload.
              input: true
            - !ruby/object:Api::Type::Array
              name: "networkTags"
              description: |
                Tags used for network traffic control.
              input: true
              item_type: Api::Type::String
            - !ruby/object:Api::Type::String
              name: 'kmsKey'
              description: |
                The Cloud KMS key to use for encryption.
              input: true
            - !ruby/object:Api::Type::String
              name: 'idleTtl'
              description: |
                The duration to keep the session alive while it's idling.
                Passing this threshold will cause the session to be terminated.
                Minimum value is 30 minutes; maximum value is 14 days
              input: true
            - !ruby/object:Api::Type::String
              name: 'networkUri'
              description: |
                Network URI to connect workload to.
              exactly_one_of:
                - environment_config.0.execution_config.0.network_uri
                - environment_config.0.execution_config.0.subnetwork_uri
              input: true
            - !ruby/object:Api::Type::String
              name: 'subnetworkUri'
              description: |
                Subnetwork URI to connect workload to.
              exactly_one_of:
                - environment_config.0.execution_config.0.network_uri
                - environment_config.0.execution_config.0.subnetwork_uri
              input: true

          # peripheralsConfig
          - !ruby/object:Api::Type::NestedObject
            name: 'peripheralsConfig'
            description: |
              Peripherals configuration that workload has access to.
            input: true
            properties:
            # metastoreService
            - !ruby/object:Api::Type::String
              name: 'metastoreService'
              description: |
                Resource name of an existing Dataproc Metastore service.
              input: true
            # sparkHistoryServerConfig
            - !ruby/object:Api::Type::NestedObject
              name: 'sparkHistoryServerConfig'
              description: |
                The Spark History Server configuration for the workload.
              input: true
              properties:
              - !ruby/object:Api::Type::String
                name: 'dataprocCluster'
                description: |
                  Resource name of an existing Dataproc Cluster to act as a Spark History Server for the workload.
                input: true

      # operation
      - !ruby/object:Api::Type::String
        name: operation
        description: |
          The resource name of the operation associated with this batch.
        output: true

      # stateHistory
      - !ruby/object:Api::Type::Array
        name: 'stateHistory'
        description: 'Historical state information for the batch.'
        output: true
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::Enum
              name: state
              description: |
                The state of the batch at this point in history.
              values:
                - :STATE_UNSPECIFIED
                - :PENDING
                - :RUNNING
                - :CANCELLING
                - :CANCELLED
                - :SUCCEEDED
                - :FAILED
              output: true
            - !ruby/object:Api::Type::String
              name: 'stateMessage'
              description: |
                Details about the state at this point in history.
              output: true
            - !ruby/object:Api::Type::String
              name: 'stateStartTime'
              description: |
                The time when the batch entered the historical state.
              output: true

      # pysparkBatch
      - !ruby/object:Api::Type::NestedObject
        name: 'pysparkBatch'
        description: |
          A configuration for running an Apache PySpark batch workload.
        input: true
        exactly_one_of:
          - pysparkBatch
          - sparkBatch
          - sparkRBatch
          - sparkSqlBatch
        properties:
          - !ruby/object:Api::Type::String
            name: 'mainPythonFileUri'
            required: true
            description: |
              The HCFS URI of the main Python file to use as the Spark driver. Must be a .py file.
            input: true
          - !ruby/object:Api::Type::Array
            name: "args"
            input: true
            description: |
              The arguments to pass to the driver.
              Do not include arguments that can be set as batch properties, such as --conf, since a collision can occur that causes an incorrect batch submission.
            item_type: Api::Type::String
          - !ruby/object:Api::Type::Array
            name: "pythonFileUris"
            input: true
            description: |
              HCFS file URIs of Python files to pass to the PySpark framework.
              Supported file types: .py, .egg, and .zip.
            item_type: Api::Type::String
          - !ruby/object:Api::Type::Array
            name: "jarFileUris"
            input: true
            description: |
              HCFS URIs of jar files to add to the classpath of the Spark driver and tasks.
            item_type: Api::Type::String
          - !ruby/object:Api::Type::Array
            name: "fileUris"
            input: true
            description: |
              HCFS URIs of files to be placed in the working directory of each executor.
            item_type: Api::Type::String
          - !ruby/object:Api::Type::Array
            name: "archiveUris"
            input: true
            description: |
              HCFS URIs of archives to be extracted into the working directory of each executor.
              Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
            item_type: Api::Type::String

      # sparkBatch
      - !ruby/object:Api::Type::NestedObject
        name: 'sparkBatch'
        input: true
        description: |
          A configuration for running an Apache Spark batch workload.
        exactly_one_of:
          - pysparkBatch
          - sparkBatch
          - sparkRBatch
          - sparkSqlBatch
        properties:
          - !ruby/object:Api::Type::Array
            name: "args"
            input: true
            description: |
              The arguments to pass to the driver.
              Do not include arguments that can be set as batch properties, such as --conf, since a collision can occur that causes an incorrect batch submission.
            item_type: Api::Type::String
          - !ruby/object:Api::Type::Array
            name: "jarFileUris"
            input: true
            description: |
              HCFS URIs of jar files to add to the classpath of the Spark driver and tasks.
            item_type: Api::Type::String
          - !ruby/object:Api::Type::Array
            name: "fileUris"
            input: true
            description: |
              HCFS URIs of files to be placed in the working directory of each executor.
            item_type: Api::Type::String
          - !ruby/object:Api::Type::Array
            name: "archiveUris"
            input: true
            description: |
              HCFS URIs of archives to be extracted into the working directory of each executor.
              Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
            item_type: Api::Type::String
          - !ruby/object:Api::Type::String
            name: 'mainJarFileUri'
            input: true
            description: |
              The HCFS URI of the jar file that contains the main class.
            exactly_one_of:
              - spark_batch.0.main_jar_file_uri
              - spark_batch.0.main_class
          - !ruby/object:Api::Type::String
            name: 'mainClass'
            input: true
            description: |
              The name of the driver main class. The jar file that contains the class must be in the classpath or specified in jarFileUris.
            exactly_one_of:
              - spark_batch.0.main_jar_file_uri
              - spark_batch.0.main_class

      # sparkRBatch
      - !ruby/object:Api::Type::NestedObject
        name: 'sparkRBatch'
        input: true
        description: |
          A configuration for running an Apache SparkR batch workload.
        exactly_one_of:
          - pysparkBatch
          - sparkBatch
          - sparkRBatch
          - sparkSqlBatch
        properties:
          - !ruby/object:Api::Type::String
            name: 'mainRFileUri'
            required: true
            input: true
            description: |
              The HCFS URI of the main R file to use as the driver. Must be a .R or .r file.
          - !ruby/object:Api::Type::Array
            name: "args"
            input: true
            description: |
              The arguments to pass to the driver.
              Do not include arguments that can be set as batch properties, such as --conf, since a collision can occur that causes an incorrect batch submission.
            item_type: Api::Type::String
          - !ruby/object:Api::Type::Array
            name: "fileUris"
            input: true
            description: |
              HCFS URIs of files to be placed in the working directory of each executor.
            item_type: Api::Type::String
          - !ruby/object:Api::Type::Array
            name: "archiveUris"
            input: true
            description: |
              HCFS URIs of archives to be extracted into the working directory of each executor.
              Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
            item_type: Api::Type::String

      # sparkSqlBatch
      - !ruby/object:Api::Type::NestedObject
        name: 'sparkSqlBatch'
        input: true
        description: |
          A configuration for running Apache Spark SQL queries as a batch workload.
        exactly_one_of:
          - pysparkBatch
          - sparkBatch
          - sparkRBatch
          - sparkSqlBatch
        properties:
          - !ruby/object:Api::Type::String
            name: 'queryFileUri'
            required: true
            input: true
            description: |
              The HCFS URI of the script that contains Spark SQL queries to execute.
          - !ruby/object:Api::Type::KeyValuePairs
            name: 'queryVariables'
            input: true
            description: |
              Mapping of query variable names to values (equivalent to the Spark SQL command: SET name="value";).
          - !ruby/object:Api::Type::Array
            name: "jarFileUris"
            input: true
            description: |
              HCFS URIs of jar files to add to the classpath of the Spark driver and tasks.
            item_type: Api::Type::String
